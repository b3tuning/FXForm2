/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
	id 'org.openjfx.javafxplugin' version '0.0.8'
	id 'com.github.ben-manes.versions' version '0.28.0'
}

allprojects {
	group = 'com.dooapp.fxform2'
	version = '8.3.0-SNAPSHOT'


}


subprojects {
	apply plugin: 'idea'
	apply plugin: 'java'
	apply plugin: 'maven-publish'

	javafx {
		version = "14.0.1"

		/*******************************************************************************************************************
		 *
		 *   Set an environment variable pointing to the location of the JavaFX SDK!
		 *   JAVAFX_HOME is the sdk directory
		 *   PATH_TO_FX  is the sdk/lib directory
		 *
		 *   ie: for Windows : Open an Administrator Command Prompt
		 *      To Permanently set an environment variable for the current user:
		 *             C:\> setx JAVAFX_HOME "C:\bin\Java\javafx-sdk-14.0.1"
		 *             C:\> setx PATH_TO_FX "C:\bin\Java\javafx-sdk-14.0.1/lib"
		 *
		 *      Or, alternatively to Permanently set global environment variable (for all users):
		 *             C:\> setx /M JAVAFX_HOME "C:\bin\Java\javafx-sdk-14.0.1"
		 *             C:\> setx /M PATH_TO_FX "C:\bin\Java\javafx-sdk-14.0.1/lib"
		 *
		 *   ie: for MacOS  : Open a Terminal
		 *     If using bash:
		 *             echo 'export JAVAFX_HOME=/Library/Java/JavaVirtualMachines/javafx-sdk-14.0.1' >> ~/.bash_profile
		 *             echo 'export PATH_TO_FX=/Library/Java/JavaVirtualMachines/javafx-sdk-14.0.1/lib' >> ~/.bash_profile
		 *
		 *     If using zsh:
		 *             echo 'export JAVAFX_HOME=/Library/Java/JavaVirtualMachines/javafx-sdk-14.0.1' >> ~/.zshrc
		 *             echo 'export PATH_TO_FX=/Library/Java/JavaVirtualMachines/javafx-sdk-14.0.1/lib' >> ~/.zshrc
		 *
		 *******************************************************************************************************************/

		sdk = System.getenv('JAVAFX_HOME')
		if (sdk == null || sdk.isBlank()) {
			throw new InvalidUserDataException("JAVAFX_HOME environment variable is not set. It must be set to root folder where JAVAFX SDK is located")
		}
		modules = ['javafx.base', 'javafx.graphics', 'javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.swing']
	}

	repositories {
		mavenCentral()
		mavenLocal()
		maven {
			url = uri('https://repository.jboss.org/nexus/content/groups/public-jboss/')
		}

		maven {
			url = uri('https://oss.sonatype.org/content/repositories/snapshots')
		}

		maven {
			url = uri('https://repo.maven.apache.org/maven2')
		}
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok:1.18.12'
		annotationProcessor 'org.projectlombok:lombok:1.18.12'

		testCompileOnly 'org.projectlombok:lombok:1.18.12'
		testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

		implementation("org.slf4j:slf4j-api:2.0.0-alpha1")
		implementation("org.slf4j:slf4j-ext:2.0.0-alpha1")
		implementation("ch.qos.logback:logback-core:1.3.0-alpha5")
		implementation("ch.qos.logback:logback-classic:1.3.0-alpha5")

	}
	sourceCompatibility = '14+'

	configurations.all {
	}

	publishing {
		publications {
			maven(MavenPublication) {
				from(components.java)
			}
		}
	}

	tasks.withType(JavaCompile) {
		options.encoding = 'UTF-8'
	}
}
